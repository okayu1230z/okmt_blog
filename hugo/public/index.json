[{"categories":["Documentation"],"content":"静的サイトジェネレータ（Static Site Generator） SSGは入力ファイルから静的ページを構築するためのツール 表で紹介するものはMarkdownコンテンツを取り込み、テンプレートを適用してCMS用ですぐ利用できるもので、本 Blog では Hugo を使っている SSG Framework Lang Description Hugo Golang ナウいしビルド早い Gatsby JavaScript (React) ナウいしテーマ多い Jykill Ruby 古い 表に知名度と自由度の高い Next.js Nuxt.js は入れてないヨ 動的 CMS には WordPress なんかがあって、これはユーザがサイトにアクセスするたびに必要に応じてページを構築する 静的 CMS は Adobe Dreamweaver や Movable Typed 等でこれは SSG と同じ仕組みで動いている 実は自分用のメモとかには Jykill 使ってて、ローカルに Git Repository 立ててメモを管理している 記事やメモを色んな Server から Origin にアップし続けるだけでドキュメントがウェブサービスで見れるようになるので便利だなー、と。 体感したことはないけど、Jykill は Hugo なんかよりビルド速度がかなり遅いらしい Gatsby はフロントエンドエンジニアとの相性が良いように思える ","date":"28288-80-80","objectID":"/hugo/:1:0","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、マルチステージビルドなDocker環境を作る","uri":"/hugo/"},{"categories":["Documentation"],"content":"Hugoの利用 Hugo のインストールは公式インストール方法通り よく使う hugo コマンドだけ軽くまとめた Command Description hugo ビルドを行う hugo check ビルドできるかチェックする hugo server ビルドを行なってサーバを立てる hugo server -p 8080 ビルドを行なってポート指定してサーバを立てる ","date":"28288-80-80","objectID":"/hugo/:1:1","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、マルチステージビルドなDocker環境を作る","uri":"/hugo/"},{"categories":["Documentation"],"content":"テーマの適用 公式サイトで紹介されているhugo themesの中から好きなテーマを選び放題 テーマの適用方法は 公式Manual通りでできそう LoveIt という誰もが使いそうな Lovery な Theme があるので、このサイトでもそれを使っている Theme Loveit ただ、自分の場合は、hugo serveでエラーが出たので、(このサイト)[https://zhuanlan.zhihu.com/p/262906525]の内容を実装しないと hugo serve が実行できなかった。 Hugo は基本的には Markdown で記述できるが、Inline HTML も使えるので、拡張性にはさほど困らない。 Markdown Syntax for LoveIt 数式表現がTEXでできるのは個人的にポイント高い \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 使いたい画像が png であることが多く、よく ImageMagick を使って jpg に変換する $ convert hogehoge.png -quality 100 hogehoge.jpg ","date":"28288-80-80","objectID":"/hugo/:1:2","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、マルチステージビルドなDocker環境を作る","uri":"/hugo/"},{"categories":["Documentation"],"content":"Docker でビルドしてデプロイ Lighthouse (figure) Hugo を Docker で扱うには、こんなイメージもあるのでそれを利用して、Deployまで持っていけると思う ただ、hugo serverで実行した場合は、huge server なるもので配信しているのでこれを nginx で配信するようにしたい hugo server は公式では「A high performance webserver」って紹介されていて、ほんまか？って感じやけど、同時に Many run it in production, but the standard behavior is for people to use it in development and use a more full featured server such as Nginx or Caddy. ということでもあるのでこだわる人は Apache やら Nginx に乗り換えるのが良さそう Hugo が動く Dockerfile は発見 Dockerfile | hugo-extended-docker これを元に作ってみる ","date":"28288-80-80","objectID":"/hugo/:2:0","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、マルチステージビルドなDocker環境を作る","uri":"/hugo/"},{"categories":["Documentation"],"content":"docker-compose によるビルド 出来上がった docker-compose はこんな感じ hugo_nginx $ docker-compose up で hugo による build が走り、変更が反映されて Nginx で配信される Build も Deploy も Theme には依存していないので任意の hugo project に使用できると思います。 hugo の Build 早いなぁ、Nginx の server 起動の方が時間かかってそう FROMが複数あるDockerfileを作成する一般で言われるところのマルチステージビルドにはなっていないので注意すること マルチステージビルド(multi stage build) マルチステージビルドはめっちゃ簡単にいうと Dockerfile に FROM が複数指定されていて、レイヤをできる限り小さく保ち、各レイヤごとに必要なものを小さくし、効率的なビルド環境を構築すること こんな感じの記事を月一くらいで書けたらな、と思っているので良いなと思ったら記事のシェアとかTwitterをフォローしてください。 ","date":"28288-80-80","objectID":"/hugo/:2:1","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、マルチステージビルドなDocker環境を作る","uri":"/hugo/"}]