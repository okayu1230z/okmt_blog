[{"categories":["Diary"],"content":"LPIC（Linux Professional Institute Certification） Linux と仲良くするために区切りもあった方が良いだろうと資格調べてたらこれに出会ったし、電光石火の如く資格を取得してきた LPIC (Linux Professional Institute Certification) Linux Essentials は、Linux を初めて使用する方のためのプロフェッショナル開発認定プログラムです。Linux Essentials の認定資格は、Linux でキャリアをスタートする人や、基本的な Linux スキルを証明したい IT 部門の方々に最適です。 LinuC との違いは気にするな、多分ちゃんと Linux 分かってればどっちも受かる 主は LPIC 派ということ。それだけ。 ","date":"2021-08-29","objectID":"/lpic1/:1:0","tags":["Certification","LPIC","Linux"],"title":"LPIC level 1を取得した","uri":"/lpic1/"},{"categories":["Diary"],"content":"勉強方法 前提として主は新卒1年目のソフトウェアエンジニアだけど普段の仕事が Linux と関わり深いわけではないので、同じような境遇の方に参考になるのではなかろうか 教材は何を使っても大差ないんだろうな、と思っている 主はこの一冊しか使っていないです。（あずき本とかping-tとかもいっさい触らず） 大体の人は 「あずき本 -\u003e 問題集 -\u003e ping-t」 「あずき本 -\u003e ping-t」 とかだと思うのでコスパ目指すならそっちの方が良いと思う。知らんけど 各試験勉強期間は 2 weeks くらい 主は意外なことに平日はちゃんと働いていて、仕事後に毎日ちょっとずつって感じ 問題集を2周読んだあたりからなんかいける気がしたので受験した。 ","date":"2021-08-29","objectID":"/lpic1/:1:1","tags":["Certification","LPIC","Linux"],"title":"LPIC level 1を取得した","uri":"/lpic1/"},{"categories":["Diary"],"content":"受験 近くのセンターで受験したけど Online Exam もできるので、会場に行くのが嫌な人はそっちを選ぼう あと、あまり色んなブログで言及はされてないけど、日本語問題文が思ってたよりひどい 特に自分の場合は LPIC 102 がひどかった 「コマンドの結果が印刷される」って問題文があったので、cups (common UNIX printing system) の話かと思ったけど、 違和感を感じたので英語文を表示してみると「printing out」が「出力」でなく「印刷」と訳されているだけでした あと「リーティングプロトコル」という謎の言葉も出きていたが、英語文をみると「Routing Protocols」であったり、 問題文が「example.com」なのに回答が全て「example.org」となっていたり、、、、 それを除くと、「こんなん解けるか！」っていう激ムズ問題は1, 2問くらいしかなかったのでちゃんと勉強した人は良心的な試験と言えるかも（なら主はもっと点数とれ） ","date":"2021-08-29","objectID":"/lpic1/:1:2","tags":["Certification","LPIC","Linux"],"title":"LPIC level 1を取得した","uri":"/lpic1/"},{"categories":["Diary"],"content":"受験結果 にしても60問ってどう考えても少ないなって思うな、自分は LPIC 101 も LPIC 102 も試験開始10分で復習まで終わって回答終了ボタン押して退室した 知ってるか知らないかの問題が多いので大体の人こうなると思う ただ、思ったより結果良くなかったので慢心は良くないと感じた Title score Date LPIC 101 640/800 2021/07/24 LPIC 102 630/800 2021/08/29 他の人のブログでは 750 とか取ってる人いるけど、暗記完璧ですげぇ…とか思っている LPIC level 2 も問題集眺めてる感じ難易度はそんなに変わらなさそうなので早めに受けたいなー LPIC に関してはLinux の知識さえ入ればよくて落ちても良いくらいに思ってるんですが、最高レベル到達まで試験5つってやっぱ多すぎん？ ","date":"2021-08-29","objectID":"/lpic1/:1:3","tags":["Certification","LPIC","Linux"],"title":"LPIC level 1を取得した","uri":"/lpic1/"},{"categories":["Documentation"],"content":"静的サイトジェネレータ（Static Site Generator） SSGは入力ファイルから静的ページを構築するためのツール 表で紹介するものはMarkdownコンテンツを取り込み、テンプレートを適用してCMS用ですぐ利用できるもので、本 Blog では Hugo を使っている SSG Framework Lang Description Hugo Golang ナウいしビルド早い Gatsby JavaScript (React) ナウいしテーマ多い Jykill Ruby 古い 表に知名度と自由度の高い Next.js Nuxt.js は入れてないヨ 動的 CMS には WordPress なんかがあって、これはユーザがサイトにアクセスするたびに必要に応じてページを構築する 静的 CMS は Adobe Dreamweaver や Movable Typed 等でこれは SSG と同じ仕組みで動いている 実は自分用のメモとかには Jykill 使ってて、ローカルに Git Repository 立ててメモを管理している 記事やメモを色んな Server から Origin にアップし続けるだけでドキュメントがウェブサービスで見れるようになるので便利だなー、と。 体感したことはないけど、Jykill は Hugo なんかよりビルド速度がかなり遅いらしい Gatsby はフロントエンドエンジニアとの相性が良いように思える ","date":"2021-08-28","objectID":"/hugo/:1:0","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、自動ビルド後にNginxでデプロイするDocker環境を作る","uri":"/hugo/"},{"categories":["Documentation"],"content":"Hugoの利用 Hugo のインストールは公式インストール方法通り よく使う hugo コマンドだけ軽くまとめた Command Description hugo ビルドを行う hugo check ビルドできるかチェックする hugo server ビルドを行なってサーバを立てる hugo server -p 8080 ビルドを行なってポート指定してサーバを立てる ","date":"2021-08-28","objectID":"/hugo/:1:1","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、自動ビルド後にNginxでデプロイするDocker環境を作る","uri":"/hugo/"},{"categories":["Documentation"],"content":"テーマの適用 公式サイトで紹介されているhugo themesの中から好きなテーマを選び放題 テーマの適用方法は 公式Manual通りでできそう LoveIt という誰もが使いそうな Lovery な Theme があるので、このサイトでもそれを使っている Theme Loveit ただ、自分の場合は、hugo serveでエラーが出たので、(このサイト)[https://zhuanlan.zhihu.com/p/262906525]の内容を実装しないと hugo serve が実行できなかった。 Hugo は基本的には Markdown で記述できるが、Inline HTML も使えるので、拡張性にはさほど困らない。 Markdown Syntax for LoveIt 数式表現がTEXでできるのは個人的にポイント高い \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 使いたい画像が png であることが多く、よく ImageMagick を使って jpg に変換する $ convert hogehoge.png -quality 100 hogehoge.jpg ","date":"2021-08-28","objectID":"/hugo/:1:2","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、自動ビルド後にNginxでデプロイするDocker環境を作る","uri":"/hugo/"},{"categories":["Documentation"],"content":"Docker でビルドしてデプロイ Hugo を Docker で扱うには、こんなイメージもあるのでそれを利用して、Deployまで持っていけると思う ただ、hugo serverで実行した場合は、huge server なるもので配信しているのでこれを nginx で配信するようにしたい hugo server は公式では「A high performance webserver」って紹介されていて、ほんまか？って感じやけど、同時に Many run it in production, but the standard behavior is for people to use it in development and use a more full featured server such as Nginx or Caddy. ということでもあるのでこだわる人は Apache やら Nginx に乗り換えるのが良さそう とりま Hugo が動く Dockerfile は発見 Dockerfile | hugo-extended-docker これを元に作ってみる ","date":"2021-08-28","objectID":"/hugo/:2:0","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、自動ビルド後にNginxでデプロイするDocker環境を作る","uri":"/hugo/"},{"categories":["Documentation"],"content":"docker-compose によるビルド 出来上がった docker-compose はこんな感じ hugo_nginx version: '3' services: hugo: build: ./hugo volumes: - ${PWD}/hugo:/src nginx: build: ./nginx depends_on: - hugo ports: - \"8081:80\" volumes: - ./hugo/public:/usr/share/nginx/html hugo image で build し、nginx で出来上がった静的ファイルを配信している これを使用方法は $ docker-compose up で hugo による build が走り、変更が反映されて Nginx で配信される Build も Deploy も Theme には依存していないので任意の hugo project に使用できると思います。 hugo の Build 早いなぁ、Nginx の server 起動の方が時間かかってそう FROMが複数あるDockerfileを docker docs で言われるところのマルチステージビルドにはなっていないので注意すること マルチステージビルド(multi stage build) マルチステージビルドはめっちゃ簡単にいうと Dockerfile に FROM が複数指定されていて、各レイヤをできる限り小さく保ち、効率的なビルド環境を構築すること こんな感じの記事を月一くらいで書けたらな、と思っているので良いなと思ったら記事のシェアとかTwitterをフォローしてください。 ","date":"2021-08-28","objectID":"/hugo/:2:1","tags":["Static Site Generator","Hugo","Docker","Onpremise"],"title":"Hugoにテーマを適用し、自動ビルド後にNginxでデプロイするDocker環境を作る","uri":"/hugo/"}]