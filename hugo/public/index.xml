<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>okmt&#39;s blogs</title>
        <link>http://example.org/</link>
        <description>okmt&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>yuki.okamoto@okmt.dev (okmt)</managingEditor>
            <webMaster>yuki.okamoto@okmt.dev (okmt)</webMaster><lastBuildDate>Sun, 29 Aug 2021 00:00:00 &#43;0900</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>LPIC level 1を取得した</title>
    <link>http://example.org/lpic1/</link>
    <pubDate>Sun, 29 Aug 2021 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://example.org/lpic1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/lpic1/images/lpic1.png" referrerpolicy="no-referrer">
            </div>LPIC（Linux Professional Institute Certification） Linux と仲良くするために区切りもあった方が良いだろうと資格調べてたらこれに出会ったし、電光石火の如く資格を取得してきた
LPIC (Linux Professional Institute Certification)  Linux Essentials は、Linux を初めて使用する方のためのプロフェッショナル開発認定プログラムです。Linux Essentials の認定資格は、Linux でキャリアをスタートする人や、基本的な Linux スキルを証明したい IT 部門の方々に最適です。   LinuC との違いは気にするな、多分ちゃんと Linux 分かってればどっちも受かる
主は LPIC 派ということ。それだけ。
勉強方法 前提として主は新卒1年目のソフトウェアエンジニアだけど普段の仕事が Linux と関わり深いわけではないので、同じような境遇の方に参考になるのではなかろうか
教材は何を使っても大差ないんだろうな、と思っている
主はこの一冊しか使っていないです。（あずき本とかping-tとかもいっさい触らず）
大体の人は
「あずき本 -&gt; 問題集 -&gt; ping-t」
「あずき本 -&gt; ping-t」
とかだと思うのでコスパ目指すならそっちの方が良いと思う。知らんけど
各試験勉強期間は 2 weeks くらい
主は意外なことに平日はちゃんと働いていて、仕事後に毎日ちょっとずつって感じ
問題集を2周読んだあたりからなんかいける気がしたので受験した。
受験 近くのセンターで受験したけど Online Exam もできるので、会場に行くのが嫌な人はそっちを選ぼう
あと、あまり色んなブログで言及はされてないけど、日本語問題文が思ってたよりひどい
特に自分の場合は LPIC 102 がひどかった
「コマンドの結果が印刷される」って問題文があったので、cups (common UNIX printing system) の話かと思ったけど、]]></description>
</item><item>
    <title>Hugoにテーマを適用し、自動ビルド後にNginxでデプロイするDocker環境を作る</title>
    <link>http://example.org/hugo/</link>
    <pubDate>Sat, 28 Aug 2021 00:00:00 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://example.org/hugo/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/hugo/images/hugo.png" referrerpolicy="no-referrer">
            </div>静的サイトジェネレータ（Static Site Generator） SSGは入力ファイルから静的ページを構築するためのツール
表で紹介するものはMarkdownコンテンツを取り込み、テンプレートを適用してCMS用ですぐ利用できるもので、本 Blog では Hugo を使っている
   SSG Framework Lang Description     Hugo Golang ナウいしビルド早い   Gatsby JavaScript (React) ナウいしテーマ多い   Jykill Ruby 古い    表に知名度と自由度の高い Next.js Nuxt.js は入れてないヨ
動的 CMS には WordPress なんかがあって、これはユーザがサイトにアクセスするたびに必要に応じてページを構築する
静的 CMS は Adobe Dreamweaver や Movable Typed 等でこれは SSG と同じ仕組みで動いている
実は自分用のメモとかには Jykill 使ってて、ローカルに Git Repository 立ててメモを管理している
記事やメモを色んな Server から Origin にアップし続けるだけでドキュメントがウェブサービスで見れるようになるので便利だなー、と。
体感したことはないけど、Jykill は Hugo なんかよりビルド速度がかなり遅いらしい]]></description>
</item></channel>
</rss>
